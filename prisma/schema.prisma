generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // shadowDatabaseUrl = env("DATABASE_SHADOW")
}

enum Tipado_protocolos {
  ARS
  SERVICIO
  DEFAULT
}

enum Tipado_estados_turnos {
  NUEVA_SESION
  ESPERANDO
  ATENDIENDO
  EN_ESPERA
  DESCANSANDO
  CANCELADO
  TERMINADO
}

enum turno_llamada {
  UNCALLED
  CALLING
  CALLED
}

enum Tipado_marcas_tv {
  ROKU_TV
  SAMSUNG_TV
  DEFAULT
}

model Turnos {
  id                  Int            @id @default(autoincrement())
  secuencia_ticket    String         @db.VarChar(5)
  servicio_actual_id  Int
  servicio_destino    Servicios      @relation(fields: [servicio_destino_id], references: [id])
  servicio_destino_id Int
  estado_turno        Estados_turnos? @relation(fields: [estado_turno_id], references: [id])
  estado_turno_id     Int?            @default(1)
  cola_posicion       Int
  cliente             Clientes       @relation(fields: [cliente_id], references: [id])
  cliente_id          Int
  sucursal            Sucursales     @relation(fields: [sucursal_id], references: [id])
  sucursal_id         Int
  fecha_turno         DateTime       @db.Date @default(now())
  registrado_por      Usuarios       @relation(fields: [registrado_por_id], references: [id])
  registrado_por_id   Int
  createdAt           DateTime?      @default(now())

  atenciones_turnos_servicios Atenciones_turnos_servicios[]
  servicios_dependientes Servicios_dependientes[]
}

model Estados_turnos {
  id          Int                   @id @default(autoincrement())
  descripcion Tipado_estados_turnos @default(NUEVA_SESION)
  siglas      String                @db.VarChar(5)
  color_hex   String                @db.VarChar(7)

  turnos                  Turnos[]
  Atenciones_turnos_servicios Atenciones_turnos_servicios[]
  opciones_menu_servicios Opciones_menu_servicios[]
}

model Servicios {
  id               Int              @id @default(autoincrement())
  descripcion      String           @db.VarChar(50)
  nombre_corto     String           @db.VarChar(20)
  prefijo          String           @db.VarChar(3)
  grupo            Grupos_servicios @relation(fields: [grupo_id], references: [id])
  grupo_id         Int
  es_seleccionable Boolean?         @default(true)
  estatus          Boolean?         @default(true)

  turnos                    Turnos[]
  servicios_sucursales      Servicios_sucursales[]
  atenciones_turno_servicio Atenciones_turnos_servicios[]
  grabaciones_servicios     Grabaciones_servicios[]
  servicios_seguros         Servicios_seguros[]
  tipos_visitas             Tipos_visitas[]
  Servicios_departamentos_sucursales Servicios_departamentos_sucursales[]
}

model Grupos_servicios {
  id          Int    @id @default(autoincrement())
  descripcion String @db.VarChar(25)
  es_seleccionable Boolean? @default(true)
  color_hex   String @db.VarChar(7)

  servicio                Servicios[]
  opciones_menu_servicios Opciones_menu_servicios[]
  agente                  Agentes[]
}

model Atenciones_turnos_servicios {
  turno             Turnos    @relation(fields: [turno_id], references: [id])
  turno_id          Int
  agente            Agentes   @relation(fields: [agente_id], references: [id])
  agente_id         Int
  servicio          Servicios @relation(fields: [servicio_id], references: [id])
  servicio_id       Int
  estado_turno      Estados_turnos? @relation(fields: [estado_turno_id], references: [id])
  estado_turno_id   Int?     @default(1)
  razon_cancelado   Razones_Cancelados? @relation(fields: [razon_cancelado_id], references: [id])
  razon_cancelado_id  Int?
  estatus_llamada   turno_llamada @default(UNCALLED)
  hora_inicio       DateTime? @db.Time(0)
  hora_fin          DateTime? @db.Time(0)
  espera_segundos   Int?

  @@id([turno_id, agente_id, servicio_id])
}

model Razones_Cancelados {
  id    Int   @id @default(autoincrement())
  nombre  String  @db.VarChar(30)
  descripcion  String  @db.VarChar(100)

  Atenciones_Turnos_Servicios Atenciones_turnos_servicios[]
}

model Servicios_sucursales {
  servicio            Servicios  @relation(fields: [servicio_id], references: [id])
  servicio_id         Int
  sucursal            Sucursales @relation(fields: [sucursal_id], references: [id])
  sucursal_id         Int
  disponible          Boolean?   @default(true)
  razon_no_disponible String     @db.VarChar(40)
  estatus             Boolean?   @default(true)

  @@id([servicio_id, sucursal_id])
}

model Opciones_flujo {
  id             Int    @id @default(autoincrement())
  nombre_boton   String @db.VarChar(20)
  funcion_accion String @db.VarChar(50)
  color_hex      String @db.VarChar(7)

  opciones_menu                    Opciones_menu[]
}

model Opciones_menu {
  id                       Int                     @id @default(autoincrement())
  opciones                 Opciones_flujo          @relation(fields: [opciones_id], references: [id])
  opciones_id              Int
  opcion_menu_servicios    Opciones_menu_servicios @relation(fields: [opcion_menu_servicios_id], references: [id])
  opcion_menu_servicios_id Int
  es_principal             Boolean?                @default(true)
  orden                    Int
}

model Opciones_menu_servicios {
  id                Int              @unique @default(autoincrement())
  estado_turno      Estados_turnos   @relation(fields: [estado_turno_id], references: [id])
  estado_turno_id   Int
  grupo_servicio    Grupos_servicios @relation(fields: [grupo_servicio_id], references: [id])
  grupo_servicio_id Int

  opciones_menu Opciones_menu[]
  @@id([estado_turno_id, grupo_servicio_id])
}

model Clientes {
  id                     Int                    @id @default(autoincrement())
  nombre                 String?                @db.VarChar(20) @default("sin definir")
  apellidos              String?                @db.VarChar(30) @default("sin definir")
  tipo_identificacion    Tipos_identificaciones @relation(fields: [tipo_identificacion_id], references: [id])
  tipo_identificacion_id Int
  identificacion         String                 @unique @db.VarChar(20)
  seguro                 Seguros?               @relation(fields: [seguro_id], references: [id])
  seguro_id              Int?                   @default(0)
  nombre_tutorado        String?                @db.VarChar(40)
  fecha_ultima_visita    DateTime?              @db.Date()
  estatus                Boolean?               @default(true)
  registrado_por         Usuarios               @relation(fields: [registrado_por_id], references: [id])
  registrado_por_id      Int
  modificado_por_id      Int?
  createdAt              DateTime?              @default(now())
  updatedAt              DateTime               @updatedAt

  turnos             Turnos[]
  visitas_agendadas  Visitas_agendadas[]
  contactos_clientes Contactos_clientes[]
}

model Seguros {
  id           Int      @id @default(autoincrement())
  nombre       String   @db.VarChar(60)
  nombre_corto String   @db.VarChar(10)
  siglas       String   @db.VarChar(3)
  estatus      Boolean? @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  clientes          Clientes[]
  servicios_seguros Servicios_seguros[]
}

model Tipos_identificaciones {
  id            Int    @id @default(autoincrement())
  nombre        String @db.VarChar(12)
  regex_formato String @db.VarChar(20)
  long_minima   Int
  long_maxima   Int

  clientes Clientes[]
}

model Agentes {
  id             Int           @id @default(autoincrement())
  nombre         String        @db.VarChar(30)
  descripcion    String        @db.VarChar(50)
  grupo_servicio       Grupos_servicios     @relation(fields: [grupo_servicio_id], references: [id])
  grupo_servicio_id    Int
  tipo_agente    Tipos_agentes @relation(fields: [tipo_agente_id], references: [id])
  tipo_agente_id Int
  esperando      Boolean       @default(false)
  departamento_sucursal   Departamentos_sucursales @relation(fields: [departamento_sucursal_id], references: [refId])
  departamento_sucursal_id Int
  usuario        Usuarios      @relation(fields: [usuario_id], references: [id])
  usuario_id     Int           @unique
  estatus        Boolean?      @default(true)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime?     @updatedAt

  atenciones_turno_servicio        Atenciones_turnos_servicios[]
}

model Tipos_agentes {
  id           Int      @id @default(autoincrement())
  nombre       String   @db.VarChar(25)
  nombre_corto String   @db.VarChar(5)
  descripcion  String   @db.VarChar(50)
  estatus      Boolean? @default(true)

  agentes Agentes[]
}
model Pantallas {
  id            Int               @id @default(autoincrement())
  nombre        String            @db.VarChar(20)
  detalle       String            @db.VarChar(50)
  estilo        Estilos_pantallas @relation(fields: [estilo_id], references: [id])
  estilo_id     Int
  sucursal      Sucursales        @relation(fields: [sucursal_id], references: [id])
  sucursal_id   Int
  key           String            @default(uuid())
  estatus       Boolean           @default(true)
  createdAt     DateTime          @default(now())
  updatedAt     DateTime?         @updatedAt

  colecciones_multimedia_pantallas Colecciones_multimedia_pantallas[]
}

model Estilos_pantallas {
  id       Int                @id @default(autoincrement())
  detalle  String             @db.VarChar(40)
  siglas   String             @db.VarChar(5)
  tv_brand Tipado_marcas_tv?  @default(DEFAULT)
  filepath String             @db.VarChar(30)
  estatus  Boolean?           @default(true)

  pantallas Pantallas[]
}

model Sucursales {
  id           Int         @id @default(autoincrement())
  descripcion  String      @db.VarChar(30)
  siglas       String      @db.VarChar(8)
  direccion    Direcciones @relation(fields: [direccion_id], references: [id])
  direccion_id Int         @unique
  estatus      Boolean?    @default(true)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime?    @updatedAt

  turnos                   Turnos[]
  servicios_sucursales     Servicios_sucursales[]
  departamentos_sucursales Departamentos_sucursales[]
  horarios_sucursales      Horarios_sucursales[]
  visitas_agendadas        Visitas_agendadas[]
  pantallas                Pantallas[]
}

model Direcciones {
  id               Int      @id @default(autoincrement())
  calle            String   @db.VarChar(50)
  numero           Int
  piso             Int
  sector           String   @db.VarChar(50)
  estado_provincia String   @db.VarChar(30)
  latitud_decimal  String   @db.VarChar(20)
  longitud_decimal String   @db.VarChar(20)
  createdAt        DateTime @default(now())
  updatedAt        DateTime?@updatedAt

  sucursales         Sucursales[]
  contactos_clientes Contactos_clientes[]
}

model Departamentos {
  id          Int      @id @default(autoincrement())
  descripcion String   @db.VarChar(30)
  siglas      String   @db.VarChar(5)
  createdAt   DateTime @default(now())
  updatedAt   DateTime?@updatedAt

  departamentos_sucursales  Departamentos_sucursales[]
  grabaciones_departamentos Grabaciones_departamentos[]
}

model Departamentos_sucursales {
  refId           Int           @db.Oid @unique @default(autoincrement())
  departamento    Departamentos @relation(fields: [departamento_id], references: [id])
  departamento_id Int
  sucursal        Sucursales    @relation(fields: [sucursal_id], references: [id])
  sucursal_id     Int
  estatus         Boolean?      @default(true)

  servicios_departamentos_sucursales Servicios_departamentos_sucursales[]
  agentes Agentes[]

  @@id([departamento_id, sucursal_id])
}
model Servicios_departamentos_sucursales {
  servicio                 Servicios                @relation(fields: [servicio_id], references: [id])
  servicio_id              Int
  departamento_sucursal    Departamentos_sucursales @relation(fields: [departamento_sucursal_refId], references: [refId])
  departamento_sucursal_refId Int
  estatus                  Boolean?                 @default(true)

  @@id([servicio_id, departamento_sucursal_refId])
}

model Horarios_sucursales {
  horario_dia_laborable    Horarios?  @relation(fields: [horario_dia_laborable_id], references: [id])
  horario_dia_laborable_id Int
  sucursal                 Sucursales @relation(fields: [sucursal_id], references: [id])
  sucursal_id              Int
  estatus                  Boolean?   @default(true)

  @@id([horario_dia_laborable_id, sucursal_id])
}

model Horarios_dias_laborables {
  horario          Horarios       @relation(fields: [horario_id], references: [id])
  horario_id       Int
  dia_laborable    Dias_laborales @relation(fields: [dia_laborable_id], references: [id])
  dia_laborable_id Int

  @@id([horario_id, dia_laborable_id])
}

model Dias_laborales {
  id           Int     @id @default(autoincrement())
  nombre       String  @db.VarChar(10)
  nombre_corto String  @db.VarChar(3)
  estatus      Boolean?@default(true)

  horarios_dias_laborables Horarios_dias_laborables[]
}

model Horarios {
  id           Int       @id @default(autoincrement())
  nombre       String    @db.VarChar(20)
  nombre_corto String    @db.VarChar(5)
  hora_inicio  DateTime? @db.Time(0)
  hora_fin     DateTime? @db.Time(0)

  horarios_sucursales      Horarios_sucursales[]
  horarios_dias_laborables Horarios_dias_laborables[]
}

model Grabaciones {
  id                Int               @id @default(autoincrement())
  archivo           String            @db.VarChar(20)
  formato           String            @db.VarChar(5)
  detalle           String            @db.VarChar(50)
  slug              String            @db.VarChar(200)
  tipo_grabacion    Tipos_grabaciones @relation(fields: [tipo_grabacion_id], references: [id])
  tipo_grabacion_id Int
  long              DateTime?         @db.Time()
  size_byte         Int
  estatus           Boolean?          @default(true)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime?         @updatedAt

  grabaciones_servicios     Grabaciones_servicios[]
  grabaciones_departamentos Grabaciones_departamentos[]
}

model Tipos_grabaciones {
  id           Int    @id @default(autoincrement())
  detalle      String @db.VarChar(50)
  nombre_corto String @db.VarChar(10)

  grabaciones Grabaciones[]
}

model Grabaciones_servicios {
  servicio     Servicios   @relation(fields: [servicio_id], references: [id])
  servicio_id  Int
  grabacion    Grabaciones @relation(fields: [grabacion_id], references: [id])
  grabacion_id Int
  orden        Int

  @@id([servicio_id, grabacion_id])
}

model Grabaciones_departamentos {
  departamento    Departamentos @relation(fields: [departamento_id], references: [id])
  departamento_id Int
  grabacion       Grabaciones   @relation(fields: [grabacion_id], references: [id])
  grabacion_id    Int
  orden           Int

  @@id([departamento_id, grabacion_id])
}

model Recursos_multimedia {
  id                      Int                    @id @default(autoincrement())
  archivo                 String                 @db.VarChar(20)
  tipo                    Tipos_multimedia       @relation(fields: [tipo_id], references: [id])
  tipo_id                 Int
  formato                 String                 @db.VarChar(5)
  detalle                 String                 @db.VarChar(50)
  slug                    String                 @db.VarChar(200)
  coleccion_multimedia    Colecciones_multimedia @relation(fields: [coleccion_multimedia_id], references: [id])
  coleccion_multimedia_id Int
  long                    DateTime?              @db.Time()
  size                    Int
  estatus                 Boolean?               @default(true)
  subido_por              Usuarios               @relation(fields: [subido_por_id], references: [id])
  subido_por_id           Int
  createdAt               DateTime               @default(now())
  updatedAt               DateTime?              @updatedAt
}

model Tipos_multimedia {
  id        Int    @id @default(autoincrement())
  nombre    String @db.VarChar(50)
  siglas    String @db.VarChar(3)
  icono     String @db.VarChar(20)
  color_hex String @db.VarChar(7)

  recursos_multimedia Recursos_multimedia[]
}

model Colecciones_multimedia {
  id           Int    @id @default(autoincrement())
  detalle      String @db.VarChar(50)
  nombre_corto String @db.VarChar(10)

  recursos_multimedia              Recursos_multimedia[]
  colecciones_multimedia_pantallas Colecciones_multimedia_pantallas[]
}

model Colecciones_multimedia_pantallas {
  coleccion_multimedia    Colecciones_multimedia @relation(fields: [coleccion_multimedia_id], references: [id])
  coleccion_multimedia_id Int
  pantalla                Pantallas              @relation(fields: [pantalla_id], references: [id])
  pantalla_id             Int
  descripcion             String                 @db.VarChar(50)
  orden                   Int
  estatus                 Boolean?               @default(true)

  @@id([coleccion_multimedia_id, pantalla_id])
}

model Protocolos {
  id                Int              @id @default(autoincrement())
  nombre            String           @db.VarChar(30)
  descripcion       String           @db.VarChar(50)
  tipo_protocolo    Tipos_protocolos @relation(fields: [tipo_protocolo_id], references: [id])
  tipo_protocolo_id Int
  estatus           Boolean?         @default(true)

  servicios_seguros      Servicios_seguros[]
}

model Tipos_protocolos {
  id                         Int               @id @default(autoincrement())
  tipo                       Tipado_protocolos @default(SERVICIO)
  descripcion                String            @db.VarChar(50)
  estatus                    Boolean?          @default(true)

  protocolos Protocolos[]
}

model Servicios_seguros {
  servicio     Servicios  @relation(fields: [servicio_id], references: [id])
  servicio_id  Int
  seguro       Seguros    @relation(fields: [seguro_id], references: [id])
  seguro_id    Int
  protocolo    Protocolos @relation(fields: [protocolo_id], references: [id])
  protocolo_id Int
  cobertura    String?     @db.VarChar(10)
  prioridad    Int
  estatus      Boolean?    @default(true)

  @@id([servicio_id, seguro_id, protocolo_id])
}

model Servicios_dependientes {
  id              Int @id @default(autoincrement())
  turno           Turnos @relation(fields: [turno_id], references: [id])
  turno_id        Int
  serie_servicios Json
}

model Usuarios {
  id        Int      @id @default(autoincrement())
  nombres   String   @db.VarChar(50) @unique
  correo    String   @db.VarChar(60) @unique
  username  String   @db.VarChar(15) @unique
  password  String   @db.Text
  rol       Roles    @relation(fields: [rol_id], references: [id])
  rol_id    Int
  activo    Boolean  @default(true)
  token     String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime?@updatedAt

  turnos                 Turnos[]
  clientes               Clientes[]
  agentes                Agentes[]
  recursos_multimedia    Recursos_multimedia[]
  configuraciones        Configuraciones[]
  registros_desactivados Registros_desactivados[]
}

model Roles {
  id          Int     @id @default(autoincrement())
  nombre      String  @db.VarChar(30) @unique
  descripcion String  @db.VarChar(50)
  activo      Boolean?@default(true)

  usuarios       Usuarios[]
  roles_permisos Roles_permisos[]
}

model Permisos {
  id     Int    @id @default(autoincrement())
  nombre String @db.VarChar(15)
  slug   String @db.VarChar(30)

  roles_permisos Roles_permisos[]
}

model Roles_permisos {
  rol        Roles    @relation(fields: [rol_id], references: [id])
  rol_id     Int
  permiso    Permisos @relation(fields: [permiso_id], references: [id])
  permiso_id Int
  create     Boolean  @default(false)
  read       Boolean  @default(false)
  update     Boolean  @default(false)
  delete     Boolean  @default(false)

  @@id([rol_id, permiso_id])
}

model Configuraciones {
  id                Int      @id @default(autoincrement())
  clave             String   @db.VarChar(30)
  valor             String   @db.VarChar(100)
  detalle           String   @db.VarChar(50)
  valor_default     String   @db.VarChar(100)
  modificado_por    Usuarios @relation(fields: [modificado_por_id], references: [id])
  modificado_por_id Int
  updatedAt         DateTime? @updatedAt
}

model Registros_desactivados {
  id                Int      @id @default(autoincrement())
  nombre_entidad    String   @db.VarChar(30)
  id_registro       Int
  razon_desactivado String   @db.VarChar(100)
  usuario           Usuarios @relation(fields: [usuario_id], references: [id])
  usuario_id        Int
  fecha_hora        DateTime @default(now())
}

model Visitas_agendadas {
  id                     Int           @id @default(autoincrement())
  cliente                Clientes      @relation(fields: [cliente_id], references: [id])
  cliente_id             Int
  descripcion            String        @db.VarChar(50)
  tipo_visita            Tipos_visitas @relation(fields: [tipo_visita_id], references: [id])
  tipo_visita_id         Int
  fecha_hora_planificada DateTime?     @default(now())
  sucursal               Sucursales    @relation(fields: [sucursal_id], references: [id])
  sucursal_id            Int
  comentario             String        @db.VarChar(255)
  estatus                Boolean       @default(true)
  registrado_por         Int
  createdAt              DateTime      @default(now())
  updatedAt              DateTime?     @updatedAt
}

model Tipos_visitas {
  id                  Int       @id @default(autoincrement())
  nombre              String    @db.VarChar(10)
  descripcion         String    @db.VarChar(50)
  servicio_destino    Servicios @relation(fields: [servicio_destino_id], references: [id])
  servicio_destino_id Int

  visitas_agendadas Visitas_agendadas[]
}

model Referimientos {
  id               Int                 @id @default(autoincrement())
  nombre           String              @db.VarChar(10)
  referencia       String              @db.VarChar(30)
  tipo             Tipos_referimientos @relation(fields: [tipo_id], references: [id])
  tipo_id          Int
  descripcion      String              @db.VarChar(100)
  localidad        String              @db.VarChar(50)
  sector           String              @db.VarChar(50)
  estado_provincia String              @db.VarChar(30)

  contactos_clientes Contactos_clientes[]
}

model Tipos_referimientos {
  id            Int             @id @default(autoincrement())
  nombre        String          @db.VarChar(10)
  descripcion   String          @db.VarChar(50)
  referimientos Referimientos[]
}

model Contactos_clientes {
  id               Int           @id @default(autoincrement())
  cliente          Clientes      @relation(fields: [cliente_id], references: [id])
  cliente_id       Int
  fecha_nacimiento DateTime?     @db.Date
  telefono         String        @db.VarChar(10)
  celular          String        @db.VarChar(15)
  referido         Referimientos @relation(fields: [referido_id], references: [id])
  referido_id      Int
  direccion        Direcciones   @relation(fields: [direccion_id], references: [id])
  direccion_id     Int
}
